/* Intentionnally left blank */
/* Themes are created using Qt CSS, you can visit */
/* http://doc.qt.io/qt-5/stylesheet-reference.html and */
/* http://doc.qt.io/qt-5/stylesheet-examples.html for examples. */

/* OBS will use the theme filename for the settings. */
/* You can ship images using relative paths in qss. */
/* Dark Theme is a good place to start if you need */
/* a template. */

OBSThemeMeta {
    dark: "true";
}

/* We need to set back the icons, or the preview wont stick. */

* [themeID="addIconSmall"] {
    qproperty-icon: url(theme:Dark/plus.svg);
}

* [themeID="removeIconSmall"] {
    qproperty-icon: url(theme:Dark/minus.svg);
}

* [themeID="clearIconSmall"] {
    qproperty-icon: url(theme:Dark/entry-clear.svg);
}

* [themeID="propertiesIconSmall"] {
    qproperty-icon: url(theme:Dark/settings/general.svg);
}

* [themeID="configIconSmall"] {
    qproperty-icon: url(theme:Dark/settings/general.svg);
}

* [themeID="upArrowIconSmall"] {
    qproperty-icon: url(theme:Dark/up.svg);
}

* [themeID="refreshIconSmall"] {
    qproperty-icon: url(theme:Dark/refresh.svg);
}

* [themeID="downArrowIconSmall"] {
    qproperty-icon: url(theme:Dark/down.svg);
}

* [themeID="pauseIconSmall"] {
    qproperty-icon: url(theme:Dark/media-pause.svg);
}

* [themeID="menuIconSmall"] {
    qproperty-icon: url(theme:Dark/dots-vert.svg);
}

* [themeID="cogsIcon"] {
    qproperty-icon: url(theme:Dark/cogs.svg);
}

* [themeID="filtersIcon"] {
    qproperty-icon: url(theme:Dark/filter.svg);
}

MuteCheckBox {
    outline: none;
}

MuteCheckBox::indicator:checked {
    image: url(theme:Dark/mute.svg);
}

MuteCheckBox::indicator:indeterminate {
    image: url(theme:Dark/unassigned.svg);
}

MuteCheckBox::indicator:unchecked {
    image: url(theme:Dark/settings/audio.svg);
}

QCheckBox[sourceTreeSubItem="true"] {
    background: transparent;
    outline: none;
}

QCheckBox[sourceTreeSubItem="true"]::indicator {
    width: 10px;
    height: 10px;
}

QCheckBox[sourceTreeSubItem="true"]::indicator:checked {
    image: url(theme:Dark/expand.svg);
}

QCheckBox[sourceTreeSubItem="true"]::indicator:unchecked {
    image: url(theme:Dark/collapse.svg);
}

OBSHotkeyLabel[hotkeyPairHover="true"] {
    color: rgb(235, 111, 146);
}

/* Volume Control */

VolumeMeter {
    qproperty-backgroundNominalColor: rgba(86, 148, 159, .5);
    qproperty-backgroundWarningColor: rgba(234, 157, 52, .5);
    qproperty-backgroundErrorColor: rgba(180, 99, 122, .5);
    qproperty-foregroundNominalColor: rgb(156, 207, 216);
    qproperty-foregroundWarningColor: rgb(246, 193, 119);
    qproperty-foregroundErrorColor: rgb(235, 111, 146);
    qproperty-magnitudeColor: rgb(38, 35, 58);
    qproperty-majorTickColor: rgb(224, 222, 244);
    qproperty-minorTickColor: rgb(110, 106, 134);
    qproperty-meterThickness: 3;

    /* The meter scale numbers normally use your QWidget font, with size    */
    /* multiplied by meterFontScaling to get a proportionally smaller font. */
    /* To use a unique font for the numbers, specify font-family and/or     */
    /* font-size here, and set meterFontScaling to 1.0.                     */
    qproperty-meterfontscaling: 0.7;
}

/* Label warning/error */

QLabel#warningLabel {
    color: rgb(246, 193, 119);
    font-weight: bold;
}

QLabel#errorLabel {
    color: rgb(235, 111, 146);
    font-weight: bold;
}

* [themeID="warning"] {
    color: rgb(246, 193, 119);
    font-weight: bold;
}

* [themeID="error"] {
    color: rgb(235, 111, 146);
    font-weight: bold;
}

* [themeID="good"] {
    color: rgb(156, 207, 216);
    font-weight: bold;
}

/* macOS Separator Fix */
QMainWindow::separator {
    background: transparent;
    width: 4px;
    height: 4px;
}

/* About dialog */

* [themeID="aboutName"] {
    font-size: 36px;
    font-weight: bold;
}

* [themeID="aboutVersion"] {
    font-size: 16px;
    margin-bottom: 20px;
}

* [themeID="aboutInfo"] {
    margin-bottom: 20px;
}

* [themeID="aboutHLayout"] {
    background-color: #1f1d2e;
}

/* Preview background color */

OBSQTDisplay {
    qproperty-displayBackgroundColor: rgb(31, 29, 46);
}

/* Preview/Program labels */

* [themeID="previewProgramLabels"] {
    font-size: 18px;
    font-weight: bold;
    color: rgb(144, 140, 170);
}

/* Settings Icons */

OBSBasicSettings {
    qproperty-generalIcon: url(theme:Dark/settings/general.svg);
    qproperty-streamIcon: url(theme:Dark/settings/stream.svg);
    qproperty-outputIcon: url(theme:Dark/settings/output.svg);
    qproperty-audioIcon: url(theme:Dark/settings/audio.svg);
    qproperty-videoIcon: url(theme:Dark/settings/video.svg);
    qproperty-hotkeysIcon: url(theme:Dark/settings/hotkeys.svg);
    qproperty-accessibilityIcon: url(theme:Dark/settings/accessibility.svg);
    qproperty-advancedIcon: url(theme:Dark/settings/advanced.svg);
}

OBSBasicSettings QListWidget::item {
    padding-top: 5px;
    padding-bottom: 5px;
}

/* Locked CheckBox */

QCheckBox[lockCheckBox="true"] {
    outline: none;
    background: transparent;
}

QCheckBox[lockCheckBox="true"]::indicator:checked {
    image: url(theme:Dark/locked.svg);
}

QCheckBox[lockCheckBox="true"]::indicator:unchecked {
    image: url(theme:Dark/unlocked.svg);
}

/* Visibility CheckBox */

QCheckBox[visibilityCheckBox="true"] {
    outline: none;
    background: transparent;
}

QCheckBox[visibilityCheckBox="true"]::indicator:checked {
    image: url(theme:Dark/visible.svg);
}

QCheckBox[visibilityCheckBox="true"]::indicator:unchecked {
    image: url(theme:Dark/invisible.svg);
}

* [themeID="revertIcon"] {
    qproperty-icon: url(theme:Dark/revert.svg);
}

OBSMissingFiles {
    qproperty-warningicon: url(theme:Dark/alert.svg);
}

/* Source Icons */

OBSBasic {
    qproperty-imageicon: url(theme:Dark/sources/image.svg);
    qproperty-coloricon: url(theme:Dark/sources/brush.svg);
    qproperty-slideshowicon: url(theme:Dark/sources/slideshow.svg);
    qproperty-audioinputicon: url(theme:Dark/sources/microphone.svg);
    qproperty-audiooutputicon: url(:settings/images/settings/audio.svg);
    qproperty-desktopcapicon: url(:settings/images/settings/video.svg);
    qproperty-windowcapicon: url(theme:Dark/sources/window.svg);
    qproperty-gamecapicon: url(theme:Dark/sources/gamepad.svg);
    qproperty-cameraicon: url(theme:Dark/sources/camera.svg);
    qproperty-texticon: url(theme:Dark/sources/text.svg);
    qproperty-mediaicon: url(theme:Dark/sources/media.svg);
    qproperty-browsericon: url(theme:Dark/sources/globe.svg);
    qproperty-groupicon: url(theme:Dark/sources/group.svg);
    qproperty-sceneicon: url(theme:Dark/sources/scene.svg);
    qproperty-defaulticon: url(theme:Dark/sources/default.svg);
    qproperty-audioprocessoutputicon: url(theme:Dark/sources/windowaudio.svg);
}

/* Scene Tree */

SceneTree {
    qproperty-griditemwidth: 150;
    qproperty-griditemheight: 24;
}

/* Save icon */

* [themeID="replayIconSmall"] {
    qproperty-icon: url(theme:Dark/save.svg);
}

/* Studio Mode T-Bar */

QSlider[themeID="tBarSlider"] {
    height: 24px;
}

QSlider::groove:horizontal[themeID="tBarSlider"] {
    border: 1px solid #26233a;
    height: 5px;
    background: #1f1d2e;
}

QSlider::sub-page:horizontal[themeID="tBarSlider"] {
    background: #1f1d2e;
    border: 1px solid #26233a;
}

QSlider::handle:horizontal[themeID="tBarSlider"] {
    background-color: #26233a;
    width: 12px;
    height: 24px;
    margin: -24px 0px;
}

/* Source Context */
#contextContainer QPushButton {
    padding: 3px 10px;
}

#contextContainer QPushButton[themeID2="contextBarButton"] {
    padding: 3px 6px;
}

#contextContainer QPushButton#sourcePropertiesButton {
    qproperty-icon: url(theme:Dark/settings/general.svg);
}

#contextContainer QPushButton#sourceFiltersButton {
    qproperty-icon: url(theme:Dark/filter.svg);
}

#contextContainer QPushButton#sourceInteractButton {
    qproperty-icon: url(theme:Dark/interact.svg);
}

/* Media icons */

* [themeID="playIcon"] {
    qproperty-icon: url(theme:Dark/media/media_play.svg);
}

* [themeID="pauseIcon"] {
    qproperty-icon: url(theme:Dark/media/media_pause.svg);
}

* [themeID="restartIcon"] {
    qproperty-icon: url(theme:Dark/media/media_restart.svg);
}

* [themeID="stopIcon"] {
    qproperty-icon: url(theme:Dark/media/media_stop.svg);
}

* [themeID="nextIcon"] {
    qproperty-icon: url(theme:Dark/media/media_next.svg);
}

* [themeID="previousIcon"] {
    qproperty-icon: url(theme:Dark/media/media_previous.svg);
}

/* YouTube Integration */
OBSYoutubeActions {
    qproperty-thumbplaceholder: url(theme:Dark/sources/image.svg);
}

#ytEventList QLabel {
    background-color: #191724;
    border: 1px solid #1f1d2e;
}

#ytEventList QLabel:hover {
    background-color: #1f1d2e;
    border: 1px solid #6e6a86;
}

#ytEventList QLabel[isSelectedEvent="true"] {
    background-color: #1f1d2e;
    border: 1px solid #26233a;
}

/* Calendar Widget */
QCalendarWidget QToolButton {
    padding: 0px 12px;
}

#qt_calendar_monthbutton::menu-indicator {
    image: url(theme:Dark/down.svg);
    subcontrol-position: right;
    padding-top: 2px;
    padding-right: 2px;
    height: 8px;
    width: 8px;
}

#qt_calendar_monthbutton::menu-indicator:hover {
    image: url(theme:Dark/down.svg);
    color: rgb(235, 111, 146);
}

QCalendarWidget #qt_calendar_prevmonth {
    padding: 2px;
    qproperty-icon: url(theme:Dark/left.svg);
    icon-size: 16px, 16px;
}

QCalendarWidget #qt_calendar_nextmonth {
    padding: 2px;
    qproperty-icon: url(theme:Dark/right.svg);
    icon-size: 16px, 16px;
}

/* Status Bar */
StatusBarWidget > QFrame {
    padding: 0px 12px 8px;
}

/* Dock Widget */
QDockWidget {
    titlebar-close-icon: url(theme:Dark/close.svg);
    titlebar-normal-icon: url(theme:Dark/popout.svg);
}
